openapi: 3.0.3
info:
  title: BlueTick CRM - OpenAPI 3.0
  description: |-
    This is a BlueTick Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io).
    
    Some useful links:
    - [BlueTick CRM frontend repository](github.com/adnancrm/bluetick-frontend/)
  termsOfService: http://swagger.io/terms/
  contact:
    email: gupta.arpit03@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://bluetick.com/api/v1
tags:
  - name: customer
    description: Everything about your Customers
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: leads
    description: Access to Customer travel enqueries
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
  - name: user
    description: Operations about user
paths:
  /customer:
    put:
      tags:
        - customer
      summary: Update an existing customer
      description: Update an existing customer by Email Id
      operationId: updateCustomer
      requestBody:
        description: Update an existent customer
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid Email ID supplied
        '404':
          description: Customer not found
        '405':
          description: Validation exception
      security:
        - customer_auth:
            - write:customers
            - read:customers
    post:
      tags:
        - customer
      summary: Add a new customer
      description: Add a new customer
      operationId: addCustomer
      requestBody:
        description: Create a new customer
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Customer'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '405':
          description: Invalid input
      security:
        - customer_auth:
            - write:customers
            - read:customers
  /customer/{emailId}:
    get:
      tags:
        - customer
      summary: Find customer by ID
      description: Returns a single customer
      operationId: getCustomerByEmail
      parameters:
        - name: emailId
          in: path
          description: Email ID of customer to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Invalid Email ID supplied
        '404':
          description: Customer not found
      security:
        - api_key: []
        - customer_auth:
            - write:customers
            - read:customers
    post:
      tags:
        - customer
      summary: Updates a customer with form data
      description: ''
      operationId: updateCustomerWithForm
      parameters:
        - name: emailId
          in: path
          description: ID of customer that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of customer that needs to be updated
          schema:
            type: string
      responses:
        '405':
          description: Invalid input
      security:
        - customer_auth:
            - write:customers
            - read:customers
    delete:
      tags:
        - customer
      summary: Deletes a customer
      description: delete a customer
      operationId: deleteCustomer
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: emailId
          in: path
          description: Customer id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid pet value
      security:
        - customer_auth:
            - write:customers
            - read:customers
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 100000
        name:
          type: string
          example: fehguy
        mobile:
          type: string
          example: 9988998899
        email:
          type: string
          example: john.tech@gmail.com
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  requestBodies:
    Customer:
      description: Customer object that needs to be added
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Customer'
        application/xml:
          schema:
            $ref: '#/components/schemas/Customer'
  securitySchemes:
    customer_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify customer in your account
            read:pets: read your customers
    api_key:
      type: apiKey
      name: api_key
      in: header